@page "/Payment"
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime


<h3 style="color:#FAFAD2; text-align: center;">Payment</h3>

<div class="container text-center mt-5">
    <h4 style="color:#FAFAD2;">Select Payment Method:</h4>
    <div>
        <button class="btn default outlined-button my-3" @onclick="PayByCard">Pay by Card</button>
        <button class="btn default outlined-button my-3 ml-3" @onclick="PayOnCounter">Pay on the Counter</button>
    </div>
</div>

<button class="btn default outlined-button justify-items-center my-3" style="color:#FAFAD2; width: 100px;" @onclick="GoHome">Go Home</button>
<button class="btn default outlined-button justify-items-center my-3" style="color:#FAFAD2; width: 100px;" @onclick="GoBack">Go Back</button>

@if (PaymentNumber.HasValue)
{
    <p style="color:#FAFAD2;">Please proceed to the counter and provide the following payment number:</p>
    <h2 style="color:#FAFAD2;">@PaymentNumber</h2>
}

@code {

    private string selectedCoffeeChoice;
    private int? PaymentNumber;

    private void GoHome()
    {
        NavigationManager.NavigateTo("/");
    }
    private void GoBack()
    {
        var queryString = !string.IsNullOrWhiteSpace(selectedCoffeeChoice) ? $"?choice={selectedCoffeeChoice}" : "";
        NavigationManager.NavigateTo($"/PreOrder{queryString}");

    }
    private async Task PayByCard()
    {
        NavigationManager.NavigateTo("https://your-pos-terminal-url");
    }

    private void PayOnCounter()
    {
        PaymentNumber = GeneratePaymentNumber();
        StateHasChanged(); 
    }


    private int GeneratePaymentNumber()
    {
        Random random = new Random();
        return random.Next(100, 900);
    }
}
