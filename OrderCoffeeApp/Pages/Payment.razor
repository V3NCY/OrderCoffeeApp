@page "/Payment"
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime


<h3 style="color:#FAFAD2; text-align: center;">Payment</h3>

<div class="container text-center mt-5">
    <h4 style="color:#FAFAD2;">Select Payment Method:</h4>
    <div>
       @if (!payByCardDisabled)
        {
            <button class="btn default outlined-button justify-items-center my-3" style="color:#FAFAD2;" @onclick="PayByCard">Pay by Card</button>
        }

        @if (!payOnCounterDisabled)
        {
            <button class="btn default outlined-button justify-items-center my-3 ml-3" @onclick="PayOnCounter">Pay on the Counter</button>
        }
    </div>
</div>

<button class="btn default outlined-button justify-items-center my-3" style="color:#FAFAD2; width: 100px;" @onclick="GoHome">Go Home</button>
<button class="btn default outlined-button justify-items-center my-3" style="color:#FAFAD2; width: 100px;" @onclick="GoBack">Go Back</button>

@if (PaymentNumber.HasValue)
{
    <p style="color:#FAFAD2;">Please proceed to the counter and provide the following payment number:</p>
    <h2 style="color:#FAFAD2;">@PaymentNumber</h2>
}


@if (showPaymentConfirmation)
{
    <div class="modal fade show" id="paymentConfirmationModal" tabindex="-1" role="dialog" style="display: block;">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    @paymentConfirmationMessage
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn default outlined-button" @onclick="ClosePaymentConfirmation">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {

    private string selectedCoffeeChoice;
    private int? PaymentNumber;
    private bool showPaymentConfirmation = false;
    private bool payByCardDisabled = false;
    private bool payOnCounterDisabled = false;
    private string paymentConfirmationMessage = "";

    private void GoHome()
    {
        NavigationManager.NavigateTo("/");
    }
    private void GoBack()
    {
        var queryString = !string.IsNullOrWhiteSpace(selectedCoffeeChoice) ? $"?choice={selectedCoffeeChoice}" : "";
        NavigationManager.NavigateTo($"/PreOrder{queryString}");

    }
    private async Task PayByCard()
    {
        paymentConfirmationMessage = "Please continue to the POS terminal.";
        showPaymentConfirmation = true;
        payOnCounterDisabled = true;
        payByCardDisabled = true;
    }

    private async Task PayOnCounter()
    {
        int paymentNumber = GeneratePaymentNumber();
        paymentConfirmationMessage = $"Please proceed to the counter and provide payment number: {paymentNumber}";
        showPaymentConfirmation = true;
        payByCardDisabled = true;
        payOnCounterDisabled = true;
    }


    private int GeneratePaymentNumber()
    {
        Random random = new Random();
        return random.Next(100, 900);
    }

    private void ClosePaymentConfirmation()
    {
        showPaymentConfirmation = false;
    }
}
